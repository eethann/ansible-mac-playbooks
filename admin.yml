---
# playbook for setting up the admin account with stuff I like to work with
# pass in a specific host of group of hosts when calling this playbook. This keeps
# the playbook non-destructive except for explicitly defined hosts. 

- hosts: '{{ target }}'
  user: '{{ admin_user }}'

  vars: 
    username: '{{ ansible_ssh_user }}'
    dock_apps:
      - /Applications/Google Chrome.app
      - /Applications/SourceTree.app
      - /Applications/Utilities/Terminal.app
    dock_others:
    - /Users/{{ username }}/Downloads

  roles:
    - global-prefs
    - { role: finder, when: user_lib is defined and user_lib_prefs is defined }
    - { role: dock, when: user_lib is defined and user_lib_prefs is defined }
    - { role: homebrew }
    - { role: homebrew_cask }
    - { role: dotfiles } # TODO make dotfiles repo configurable
    - { role: drupal-dev }
    - { role: js-dev }

  pre_tasks: 
    - set_fact: user_home=/Users/{{ ansible_ssh_user }}
    - set_fact: user_lib={{ user_home }}/Library
    - set_fact: user_lib_prefs={{ user_lib }}/Preferences

    - name: Make sure User icons directory exists
      file: path=/Library/User\ Pictures/Ansible/ state=directory mode=0755
      sudo: yes

    - name: Get available account pictures
      shell: ls -1 files/admin_account_images/*.png
      register: account_images
      ignore_errors: yes
      connection: local

    - name: Default to an empty list if no images are found
      # The `with_random_choice` command needs a list to pull from, it fails loudly if the list is empty
      # Sending a list with one empty string allows us to use `account_images.stdout_lines[0]` as a boolean
      set_fact:
         account_images:
            stdout_lines: ['']
      when: account_images.stdout_lines | length == 0

    - name: Send new account picture
      copy: 
        src={{ item }}
        dest="/Library/User Pictures/Ansible/{{ item | basename }}"
        mode=0644
      when: account_images.stdout_lines[0]
      with_random_choice: account_images.stdout_lines
      ignore_errors: yes
      register: account_image
      sudo: yes

    - name: Clear existing user account picture
      command: 'dscl . {{ item }}'
      with_items:
        - 'delete /Users/{{ admin_user }} jpegphoto'
        - 'delete /Users/{{ admin_user }} Picture'
      sudo: yes

    - name: Update user account picture
      command: 'dscl . create /Users/{{ admin_user }} Picture "/Library/User Pictures/Ansible/{{ account_image.results[0].item | basename }}"'
      when: account_image.results[0].item is defined
      sudo: yes

    - name: set umask to 002 in .profile
      lineinfile: 'dest=/Users/{{ ansible_ssh_user }}/.profile state=present regexp="^umask\s+\d+" insertafter=EOF line="umask 002" create=yes'

    - name: Prepend /usr/local/bin to $PATH in .profile
      lineinfile: 'dest=/Users/{{ ansible_ssh_user }}/.profile state=present regexp="^export\s+PATH=/usr/local/bin:\\$PATH" insertafter=EOF line="export PATH=/usr/local/bin:$PATH" create=yes'

    - name: add WORKON_HOME to .profile
      lineinfile: 'dest=/Users/{{ ansible_ssh_user }}/.profile state=present regexp="^export\s+WORKON_HOME=" insertafter=EOF line="export WORKON_HOME=$HOME/.virtualenvs" create=yes'

    - name: add VIRTUALENVWRAPPER_VIRTUALENV_ARGS to .profile
      lineinfile: 'dest=/Users/{{ ansible_ssh_user }}/.profile state=present regexp="^export\s+VIRTUALENVWRAPPER_VIRTUALENV_ARGS=" insertafter=EOF line="export VIRTUALENVWRAPPER_VIRTUALENV_ARGS=\"--no-site-packages\"" create=yes'

    - name: source virtualenvwrapper from .profile
      lineinfile: 'dest=/Users/{{ ansible_ssh_user }}/.profile state=present regexp="^source .*virtualenvwrapper.sh$" insertafter=EOF line="source /usr/local/bin/virtualenvwrapper.sh" create=yes'
      tags: pip

    - name: 'Finder: Very fast keyboard repeat'
      shell: defaults write {{ user_lib_prefs }}/.GlobalPreferences KeyRepeat -int 0

    - name: 'Finder: Initial KeyRepeat delay'
      shell: defaults write {{ user_lib_prefs }}/.GlobalPreferences InitialKeyRepeat -int 25

    - name: 'Finder: Show all files'
      shell: defaults write {{ user_lib_prefs }}/com.apple.finder AppleShowAllFiles -bool true

    - name: 'Disable Dashboard'
      shell: defaults write com.apple.dashboard mcx-disabled -bool true

    - name: 'Finder: Empty the Desktop folder'
      shell: find {{ user_home }}/Desktop -mindepth 1 -delete
      sudo: yes

    - stat: path={{ user_home }}/Downloads
      register: downloads

    - name: Move existing Downloads folder out of the way
      shell: mv {{ user_home}}/Downloads {{ user_home}}/Old_Downloads
      sudo: yes
      when: not downloads.stat.islnk

    - name: symlink /tmp to ~/Downloads
      file:
        src=/tmp
        dest={{ user_home }}/Downloads
        state=link
        force=yes

    - name: Repair permissions
      shell: "chown -R {{ ansible_ssh_user }}:staff {{ user_lib_prefs }}/"
      sudo: yes

  post_tasks:
    - name: Install virtualenvwrapper
      pip: name=virtualenvwrapper
      environment:
        PATH: /usr/local/bin:{{ ansible_env["PATH"] }}
      sudo: yes
      tags: pip

    - name: Copy terminal settings file
      copy: src=files/smoke.terminal dest=/tmp/smoke.terminal
      tags: terminal

    - name: Set terminal to Smoke theme
      command: open /tmp/smoke.terminal
      ignore_errors: yes
      tags: terminal

    - name: 'Terminal: Set startup window'
      shell: 'defaults write {{ user_lib_prefs }}/com.apple.Terminal "Startup Window Settings" -string smoke'
      tags: terminal

    - name: 'Terminal: Set default window'
      shell: 'defaults write {{ user_lib_prefs }}/com.apple.Terminal "Default Window Settings" -string smoke'
      tags: terminal
