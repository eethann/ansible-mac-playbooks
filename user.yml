---
# playbook for creating new users at IOP
# this only sets up the user, configuration is handled by another playbook.
- hosts: '{{ target }}'
  user: '{{ admin_user }}'
  sudo: yes

# The vars/user.yml file contains login/password info, recreate it for specific runs
  vars_files:
    - vars/user.yml

  pre_tasks:
    - name: Check if user exists
      stat: path=/Users/{{ username }}
      register: check_user

    - set_fact: user_home=/Users/{{ username }}
    - set_fact: user_lib=/Users/{{ username }}/Library
    - set_fact: user_lib_prefs={{ user_lib }}/Preferences

    - name: Get available account pictures
      shell: ls -1 files/user_account_images/*.png
      register: account_images
      ignore_errors: yes
      sudo: no
      connection: local

    - name: Default to an empty list if no images are found
      # The `with_random_choice` command needs a list to pull from, it fails loudly if the list is empty
      # Sending a list with one empty string allows us to use `account_images.stdout_lines[0]` as a boolean
      set_fact:
         account_images:
            stdout_lines: ['']
      when: account_images.stdout_lines | length == 0

    - name: Send new account picture
      copy: 
        src={{ item }}
        dest="/Library/User Pictures/Ansible/{{ item | basename }}"
        mode=0644
      when: account_images.stdout_lines[0]
      with_random_choice: account_images.stdout_lines
      ignore_errors: yes
      register: account_image
      sudo: yes

    - name: Handle missing images so we can pass an empty string to the role
      set_fact: 
        account_image: { results: [ { item: '' } ] }
      when: account_image.results[0].item is not defined

    - name: Remove old leftovers and junk
      file:
        path={{ item }}
        state=absent
      with_items:
        - /Library/LaunchAgents/com.adobe.CS5ServiceManager.plist
        - /Library/LaunchAgents/com.xrite.device.softwareupdate.plist
        - /Library/LaunchDaemons/com.xrite.device.xrdd.plist
        - /Library/LaunchAgents/com.wacom.wacomtablet.plist
        - /Library/LaunchAgents/com.wacom.pentablet.plist

  roles:
    - global-prefs
    - { role: new-user, image: "{{ account_image.results[0].item | basename}}", when: not check_user.stat.exists }
    # Use defaults in the roles
    - { role: homebrew }
    - { role: homebrew_cask }
    - { role: safari, when: user_lib is defined and user_lib_prefs is defined }
    - { role: finder, when: user_lib is defined and user_lib_prefs is defined }
    - { role: dock, when: user_lib is defined and user_lib_prefs is defined }
    - mail
    - git

  post_tasks:
    - name: Parse the Markdown template
      shell: 'python -m markdown -x extra -x smarty {{ item }} > welcome.html.j2 chdir=templates'
      connection: local
      sudo: no
      with_first_found:
        - templates/welcome.md
        - templates/welcome_sample.md

    - name: Generate Welcome message on controller
      template: src=templates/welcome.html.j2 dest=./Welcome-to-IOP_{{ username }}.html
      connection: local
      sudo: no

    - name: Remove generated template
      file: path=templates/welcome.html.j2 state=absent
      connection: local
      sudo: no
